#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp TAB         &kp Q  &kp W             &kp E      &kp R      &kp T                 &kp Y  &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp LCTRL       &kp A  &kp S             &kp D      &kp F      &kp G                 &kp H  &kp J  &kp K      &kp L    &kp SEMI   &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X             &kp C      &kp V      &kp B                 &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH  &mo 1
&kp LEFT_ALT    &mo 1  &kp LEFT_COMMAND  &kp SPACE  &mkp LCLK             &kp ENTER  &mo 2                                        &mo 3
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp ESC           &kp NUMBER_1       &kp NUMBER_2      &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                 &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp BACKSLASH
&kp LEFT_CONTROL  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp K_MUTE    &trans        &trans                       &trans        &trans        &trans        &trans        &trans        &kp GRAVE
&kp LEFT_SHIFT    &trans             &trans            &trans        &trans        &trans                       &trans        &trans        &trans        &trans        &trans        &kp RIGHT_SHIFT
&trans            &trans             &kp LEFT_COMMAND  &kp SPACE     &mkp RCLK                       &kp ENTER  &mo 2                                                                 &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp ESC           &kp RG(Q)  &kp RG(W)         &kp RG(E)  &kp RG(R)  &kp RG(T)                 &kp RG(Y)  &kp RG(U)  &kp RG(I)      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GRAVE
&kp LEFT_CONTROL  &kp RG(A)  &kp RG(S)         &kp RG(D)  &kp RG(F)  &kp RG(G)                 &kp RG(H)  &kp RG(J)  &kp RG(K)      &kp RG(L)         &kp SEMICOLON      &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &kp RG(Z)  &kp RG(X)         &kp RG(C)  &kp RG(V)  &kp RG(B)                 &kp EQUAL  &kp MINUS  &kp LESS_THAN  &kp GREATER_THAN  &kp SLASH          &kp RIGHT_SHIFT
&kp LEFT_ALT      &mo 0      &kp LEFT_COMMAND  &kp SPACE  &kp TAB                   &kp ENTER  &none                                                                     &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6              &kp F7  &kp F8  &kp F9  &kt F10  &kp F11  &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans              &trans  &trans  &trans  &trans   &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans              &trans  &trans  &trans  &trans   &trans   &trans
&trans      &trans        &trans        &trans        &trans                    &trans  &mo 3                                     &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &to 0  &to 0      &to 0  &to 0      &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans              &to 0  &mkp LCLK  &sl 5  &mkp RCLK  &mkp MCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &to 0  &to 0      &to 0  &to 0      &trans     &mo 1
&trans  &mo 1   &trans  &trans  &trans              &trans  &mo 2                                          &mo 3
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
